{"version":3,"sources":["webpack:///src/app/main-screen/main-screen-routing.module.ts","webpack:///src/app/main-screen/main-screen.module.ts","webpack:///src/app/main-screen/main-screen.page.ts","webpack:///src/app/models/userModel.ts","webpack:///src/app/repository/user.repository.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/main-screen/main-screen.page.scss","webpack:///src/app/main-screen/main-screen.page.html"],"names":["routes","path","component","MainScreenPage","MainScreenPageRoutingModule","NgModule","imports","RouterModule","exports","MainScreenPageModule","CommonModule","FormsModule","IonicModule","declarations","authService","storageService","router","userService","getUserName","getData","USER_NAME","username","length","aUsername","value","logout","userModel","UserModel","email","lastname","name","getUser","then","data","console","log","AuthenticationService","StorageService","Router","UserService","Component","selector","template","url","UserRepository","httpClientModule","get","subscribe","error","HttpClient","Injectable","providedIn","userRepository","theUser"],"mappings":"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","file":"src_app_main-screen_main-screen_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainScreenPage } from './main-screen.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainScreenPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MainScreenPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MainScreenPageRoutingModule } from './main-screen-routing.module';\n\nimport { MainScreenPage } from './main-screen.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MainScreenPageRoutingModule\n  ],\n  declarations: [MainScreenPage]\n})\nexport class MainScreenPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { StorageService } from '../services/storage.service';\nimport { UserService } from '../services/user.service';\n\nimport { USER_NAME } from 'src/app/guards/auth.guard';\nimport { User } from '../models/user';\nimport { UserModel } from '../models/userModel';\n@Component({\n  selector: 'app-main-screen',\n  templateUrl: './main-screen.page.html',\n  styleUrls: ['./main-screen.page.scss'],\n})\nexport class MainScreenPage implements OnInit {\n\n  aUsername: string;\n\n  constructor(\n    private authService: AuthenticationService,\n    private storageService: StorageService,\n    private router: Router,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.getUserName();\n     \n  }\n\n  async getUserName(){\n    const username =  await this.storageService.getData(USER_NAME); \n    if (username.length > 0 && username[0]) {\n      this.aUsername = username[0].value;\n    }\n  }\n  async logout() {\n    await this.authService.logout();\n  }\n\n  async getUser(){\n    const userModel = new UserModel();\n    userModel.email = 'sebastianrestituyo@gmail.com';\n    userModel.lastname = 'Restituyo';\n    userModel.name = 'sebastian';\n\n    await this.userService.getUser(userModel).then(data => console.log('user data from the Main-scree' + data));\n\n\n  }\n\n}\n","export class UserModel {\n  name:string;\n  lastname:string;\n  email:string;\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserModel } from \"../models/userModel\";\n\n\n\nconst url = 'http://6f63-2806-2f0-6060-509-e166-ec16-9ec6-1088.ngrok.io';\n\nconst username = new UserModel();\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class UserRepository{\n  constructor(\n    private httpClientModule: HttpClient,\n  ){}\n\n  async getUser(){\n    await this.httpClientModule.get(url + '/users').subscribe(\n      data => {\n        console.log('UserData:'+ data);\n      }, error => {\n        console.log('ErrorMessage: '+ error);\n      }\n    );\n  }\n\n  // async createUser(){\n  //   await this.httpClientModule.post(url + '/users').subscribe(\n\n  //   )\n  // }\n\n\n\n}\n\n\n\n\n\n\n\n","import { Injectable } from \"@angular/core\";\nimport { UserModel } from \"../models/userModel\";\nimport { UserRepository } from \"../repository/user.repository\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n\n\n\n  constructor(\n    private userRepository: UserRepository\n    ){  }\n\n\n    async getUser(theUser: UserModel){\n      return await this.userRepository.getUser();\n    }\n}\n\n\n\n\n\n","export default \".welcome-msg {\\n  text-align: left;\\n}\\n\\n.general-msg {\\n  text-align: left;\\n  font-size: large;\\n}\\n\\n.small-msg {\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4tc2NyZWVuLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNFLGdCQUFBO0FBSkY7O0FBT0E7RUFDRSxnQkFBQTtFQUVBLGdCQUFBO0FBTEY7O0FBT0E7RUFDRSxlQUFBO0FBSkYiLCJmaWxlIjoibWFpbi1zY3JlZW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW9uLXJvd3tcbi8vICAgZGlzcGxheTogYmxvY2s7XG4vLyAgIHRleHQtYWxpZ246IGNlbnRlcjtcbi8vIH1cblxuLndlbGNvbWUtbXNne1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uZ2VuZXJhbC1tc2d7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgZm9udC1zaXplOiBsYXJnZTtcbn1cbi5zbWFsbC1tc2d7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuIl19 */\";","export default \"<ion-content class=\\\"ion-padding\\\" fullscreen>\\n    <img src=\\\"/assets/taxi-robot.png\\\" alt=\\\"taxi-money-care\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle>En construcción</ion-card-subtitle>\\n      <ion-card-title>Hola <b>{{aUsername}},</b></ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n\\n    ¡Gracias por registrarte a Alcancía! En unos días estaremos en contacto contigo para darte mas información de nuestra beta. ¡Estamos locos porque formes parte de este proyecto!\\n     <br>\\n     <br>\\n     <br>\\n     <br>\\n     <br>\\n     <br>\\n     <br>\\n     <br>\\n     <br>\\n    </ion-card-content> \\n\\n<!--\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <div>\\n              <h2 class=\\\"welcome-msg\\\">Hola <b>{{aUsername}}</b><br> </h2>\\n            </div>\\n            <div class=\\\"image\\\">\\n\\n            </div>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <div class=\\\"general-msg\\\">\\n\\n            </div>\\n        </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n<!-- <ion-button  (click)=\\\"logout()\\\">Logout</ion-button> -->\\n</ion-content>\\n\";"]}