{"version":3,"sources":["webpack:///src/app/pages/transactions/transactions-routing.module.ts","webpack:///src/app/pages/transactions/transactions.module.ts","webpack:///src/app/pages/transactions/transactions.page.ts","webpack:///src/app/pages/transactions/transactions.page.scss","webpack:///src/app/pages/transactions/transactions.page.html"],"names":["routes","path","component","TransactionsPage","TransactionsPageRoutingModule","NgModule","imports","RouterModule","exports","TransactionsPageModule","CommonModule","FormsModule","IonicModule","MainComponentsModule","declarations","transactionService","doFetch","event","console","log","setTimeout","target","complete","getUserTransactions","then","response","forEach","item","createdDate","Date","create_time","toString","replace","transationHistory","error","TransactionService","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,gDAAAC;AAFb,OADqB,CAAvB;;UAWaC,8BAA6B;AAAA;AAAA,O;;AAA7BA,oCAA6B,uDAJzC,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAIyC,GAA7BH,8BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMAK,uBAAsB;AAAA;AAAA,O;;AAAtBA,6BAAsB,uDAVlC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,0DAAAR,6BAJO,EAKP,uEAAAS,oBALO,CADD;AAQRC,oBAAY,EAAE,CAAC,gDAAAX,gBAAD;AARN,OAAT,CAUkC,GAAtBM,uBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCfAN,iBAAgB;AAE3B,kCAAoBY,kBAApB,EAA4D;AAAA;;AAAxC,eAAAA,kBAAA,GAAAA,kBAAA;AAA2C;;AAFpC;AAAA;AAAA,iBAI3B,oBAAW;AACT,iBAAKC,OAAL;AACD;AAN0B;AAAA;AAAA,iBAQ3B,mBAAUC,KAAV,EAAiB;AACfC,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,iBAAKH,OAAL;AACAI,sBAAU,CAAC,YAAM;AACfF,qBAAO,CAACC,GAAR,CAAY,2BAAZ;AAEAF,mBAAK,CAACI,MAAN,CAAaC,QAAb;AACD,aAJS,EAIP,IAJO,CAAV;AAKD;AAhB0B;AAAA;AAAA,iBAkB3B,mBAAO;AACL,iBAAKC,mBAAL;AACD;AApB0B;AAAA;AAAA,iBAsB3B,+BAAmB;AAAA;;AACjB,iBAAKR,kBAAL,CAAwBQ,mBAAxB,GAA8CC,IAA9C,CAAmD,UAACC,QAAD,EAAc;AAC/DP,qBAAO,CAACC,GAAR,CAAYM,QAAZ;AACAA,sBAAQ,CAACC,OAAT,CAAiB,UAAUC,IAAV,EAAgB;AAC/B,oBAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,WAAd,CAApB;AACAH,oBAAI,CAACG,WAAL,GAAoBF,WAAW,CAACG,QAAZ,GAAuBC,OAAvB,CAA+B,mCAA/B,EAAmE,EAAnE,CAApB;AACD,eAHD;AAIA,mBAAI,CAACC,iBAAL,GAAyBR,QAAzB;AACD,aAPD,WAOS,UAACS,KAAD,EAAW;AAClBhB,qBAAO,CAACC,GAAR,CAAYe,KAAZ;AACD,aATD;AAUD;AAjC0B;;AAAA;AAAA,S;;;;gBANpB,kEAAAC;;;;AAMIhC,uBAAgB,uDAL5B,+CAAAiC,SAAA,EAAU;AACTC,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR,0EAFS;;AAAA,OAAV,CAK4B,GAAhBnC,iBAAgB,CAAhB;;;;;;;;;ACPb;;;AAAA,uCAAe,yKAAf;;;;;;;;;ACAA;;;AAAA,uCAAe,69BAAf","file":"src_app_pages_transactions_transactions_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionsPage } from './transactions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionsPageRoutingModule } from './transactions-routing.module';\n\nimport { TransactionsPage } from './transactions.page';\n\nimport { MainComponentsModule } from 'src/app/components/main-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionsPageRoutingModule,\n    MainComponentsModule\n  ],\n  declarations: [TransactionsPage]\n})\nexport class TransactionsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { TransactionService } from 'src/app/services/transaction.service';\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.page.html',\n  styleUrls: ['./transactions.page.scss'],\n})\nexport class TransactionsPage implements OnInit {\n\n  constructor(private transactionService: TransactionService) { }\n  transationHistory: Array<any>;\n  ngOnInit() {\n    this.doFetch();\n  }\n\n  doRefresh(event) {\n    console.log('Begin async operation');\n    this.doFetch();\n    setTimeout(() => {\n      console.log('Async operation has ended');\n      \n      event.target.complete();\n    }, 2000);\n  }\n\n  doFetch(){\n    this.getUserTransactions();\n  }\n\n  getUserTransactions(){\n    this.transactionService.getUserTransactions().then((response) => {\n      console.log(response);\n      response.forEach(function (item) {  \n        const createdDate = new Date(item.create_time);  \n        item.create_time =  createdDate.toString().replace('GMT-0400 (Atlantic Standard Time)',''); \n      });  \n      this.transationHistory = response;\n    }).catch((error) => {\n      console.log(error);\n    }); \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmFuc2FjdGlvbnMucGFnZS5zY3NzIn0= */\";","export default \"<ion-header> \\n    <app-top-navigation-toolbar>Historial Transaciones</app-top-navigation-toolbar> \\n</ion-header>\\n \\n<!-- List of Text Items -->\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher> \\n  <li style=\\\"list-style: none;\\\" *ngFor=\\\"let transation  of transationHistory\\\">\\n    <ion-card>\\n      <ion-item> \\n          <h3> <img src=\\\"../../../assets/Icon awesome-coins.png\\\"> {{transation.id}}  </h3>\\n        <ion-label></ion-label>\\n        <!-- <ion-button fill=\\\"outline\\\" slot=\\\"end\\\">Ver</ion-button> -->\\n      </ion-item>\\n      <ion-item>\\n        Fecha: {{transation.create_time}} <br/>\\n        Monto Total: {{transation.gross_amount}} $ <br/>\\n        <!-- Monto Neto: {{transation.net_amount}} $ -->\\n      </ion-item>\\n    \\n      <ion-card-content>\\n        {{transation.status}}\\n      </ion-card-content>\\n    </ion-card>\\n  </li>\\n</ion-content> \\n\\n\\n\";"]}