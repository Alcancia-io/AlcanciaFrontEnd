{"version":3,"sources":["./src/app/pages/transactions/transactions-routing.module.ts","./src/app/pages/transactions/transactions.module.ts","./src/app/pages/transactions/transactions.page.ts","./src/app/pages/transactions/transactions.page.scss","./src/app/pages/transactions/transactions.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEA;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACF;AAEA;AAEiC;AAEvB;AAE0B;IAYpE,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAVlC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,uFAA6B;YAC7B,2FAAoB;SACrB;QACD,YAAY,EAAE,CAAC,gEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACtBe;AACwB;IAM7D,gBAAgB,SAAhB,gBAAgB;IAE3B,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAE1D,yBAAoB,GAAY,IAAI,CAAC;IAFyB,CAAC;IAG/D,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YAEzC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,OAAO;QACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC9D,IAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAC;gBACtB,IAAI,CAAC,oBAAoB,IAAI,KAAK,CAAC;aACpC;iBAAI;gBACH,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI;oBAC7B,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC/C,IAAI,CAAC,WAAW,GAAI,WAAW,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,mCAAmC,EAAC,EAAE,CAAC,CAAC;gBAC7F,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;aACnC;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA5CQ,oFAAkB;;AAMd,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,iFAAuC;;KAExC,CAAC;GACW,gBAAgB,CAsC5B;AAtC4B;;;;;;;;;;;;;ACP7B,+DAAe,wBAAwB,uBAAuB,oBAAoB,GAAG,6CAA6C,+TAA+T,E;;;;;;;;;;;;ACAjc,+DAAe,kVAAkV,uTAAuT,eAAe,6KAA6K,wBAAwB,+BAA+B,yBAAyB,qCAAqC,uBAAuB,qEAAqE,mBAAmB,6EAA6E,E","file":"src_app_pages_transactions_transactions_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionsPage } from './transactions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionsPageRoutingModule } from './transactions-routing.module';\n\nimport { TransactionsPage } from './transactions.page';\n\nimport { MainComponentsModule } from 'src/app/components/main-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionsPageRoutingModule,\n    MainComponentsModule\n  ],\n  declarations: [TransactionsPage]\n})\nexport class TransactionsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { TransactionService } from 'src/app/services/transaction.service';\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.page.html',\n  styleUrls: ['./transactions.page.scss'],\n})\nexport class TransactionsPage implements OnInit {\n\n  constructor(private transactionService: TransactionService) { }\n  transationHistory: Array<any>;\n  transactionAvailable: boolean = true;\n  ngOnInit() {\n    this.doFetch();\n  }\n\n  doRefresh(event) {\n    console.log('Begin async operation');\n    this.doFetch();\n    setTimeout(() => {\n      console.log('Async operation has ended');\n      \n      event.target.complete();\n    }, 2000);\n  }\n\n  doFetch(){\n    this.getUserTransactions();\n  }\n\n  getUserTransactions(){\n    this.transactionService.getUserTransactions().then((response) => { \n      if(response.length == 0){\n        this.transactionAvailable == false;\n      }else{\n        response.forEach(function (item) {  \n          const createdDate = new Date(item.create_time);  \n          item.create_time =  createdDate.toString().replace('GMT-0400 (Atlantic Standard Time)',''); \n        });  \n        this.transationHistory = response;\n      } \n    }).catch((error) => {\n      console.log(error);\n    }); \n  }\n}\n","export default \".notransactionMessage {\\n  text-align: center;\\n  margin-top: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGVBQUE7QUFDSiIsImZpbGUiOiJ0cmFuc2FjdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdHJhbnNhY3Rpb25NZXNzYWdle1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAxMCU7XG59Il19 */\";","export default \"<ion-header> \\n    <app-top-navigation-toolbar>Historial Transaciones</app-top-navigation-toolbar> \\n</ion-header>\\n \\n<!-- List of Text Items -->\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher> \\n  <li style=\\\"list-style: none;\\\" *ngFor=\\\"let transation  of transationHistory\\\">\\n    <ng-container *ngIf=\\\"!transactionAvailable\\\" >\\n      <p class=\\\"notransactionMessage\\\">No hay transacciones para mostrar</p>\\n    </ng-container>\\n    <ion-card>\\n      <ion-item> \\n          <h3> <img src=\\\"../../../assets/Icon awesome-coins.png\\\"> {{transation.id}}  </h3>\\n        <ion-label></ion-label>\\n        <!-- <ion-button fill=\\\"outline\\\" slot=\\\"end\\\">Ver</ion-button> -->\\n      </ion-item>\\n      <ion-item>\\n        Fecha: {{transation.create_time}} <br/>\\n        Monto Total: {{transation.gross_amount}} $ <br/>\\n        <!-- Monto Neto: {{transation.net_amount}} $ -->\\n      </ion-item>\\n    \\n      <ion-card-content>\\n        {{transation.status}}\\n      </ion-card-content>\\n    </ion-card>\\n  </li>\\n</ion-content> \\n\\n\\n\";"],"sourceRoot":"webpack:///"}